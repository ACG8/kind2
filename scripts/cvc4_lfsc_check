#!/bin/sh

#########################################################################
# This file is part of the Kind 2 model checker.                        #
#                                                                       #
# Copyright (c) 2014 by the Board of Trustees of the University of Iowa #
#                                                                       #
# Licensed under the Apache License, Version 2.0 (the "License"); you   #
# may not use this file except in compliance with the License.  You     #
# may obtain a copy of the License at                                   #
#                                                                       #
# http://www.apache.org/licenses/LICENSE-2.0                            #
#                                                                       #
# Unless required by applicable law or agreed to in writing, software   #
# distributed under the License is distributed on an "AS IS" BASIS,     #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       #
# implied. See the License for the specific language governing          #
# permissions and limitations under the License.                        #
#########################################################################


# Small script to run CVC4 with proof production, extract the goal from the
# proof tree and check the equivalence with the original smt2 file using Z3.
#
# run it like this: cvc4_lfsc_check file.smt2
# change the paths CVC4, Z3, LFSCEX to the correct ones

if [ -z $TMPDIR ]; then
    TMPDIR="/tmp"
fi

TIMEOUT="timeout 600"
TOCODE=124

CVC4="$HOME/trucs/CVC4/builds/x86_64-apple-darwin13.4.0/production-proof/bin/cvc4"
Z3="z3"
LFSCEX="$HOME/dev/kind2/bin/lfsc-extractor"

lfsc_tmp="$TMPDIR/$(basename $1).lfsc"
smt2_eq="$TMPDIR/$(basename $1).lfsc_eq.smt2"

RET=127

RED='\033[1;31m'
GREEN='\033[1;32m'
WELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m' # No Color

echo "Running cvc4 with proofs on $1"
$TIMEOUT $CVC4 --proof --check-proofs --dump-proof $1 > $lfsc_tmp
RET=$?

if [ $RET = $TOCODE ]; then
    echo "${YELLOW}[CVC4_TIMEOUT]${NC}"
    exit $RET
fi
if [ $RET -ne 0 ]; then
    echo "${RED}[LFSC_FAILED]${NC}"
    exit $RET
fi


SAT=$(grep -q "^sat" $lfsc_tmp; echo $?)

if [ $SAT = 0 ]; then
    echo "${BLUE}[SAT]${NC}"
    exit $RET
fi

echo "Proof written in $lfsc_tmp"

echo "Extracting forumla from lfsc proof"
$TIMEOUT $LFSCEX $1 $lfsc_tmp > $smt2_eq
RET=$?


if [ $RET = $TOCODE ]; then
    echo "${YELLOW}[LFSCEX_TIMEOUT]${NC}"
    exit $RET
fi
if [ $RET -ne 0 ]; then
    echo "${RED}[LFSCEX_FAILED]${NC}"
    exit $RET
fi



echo "Equivalence goal written in $smt2_eq"

echo "Checking equivalence with z3"
$TIMEOUT $Z3 $smt2_eq | tee /dev/stderr | grep -q "^unsat"
RET=$?


if [ $RET = $TOCODE ]; then
    echo "${YELLOW}[EQ_TIMEOUT]${NC}"
    exit $RET
fi
if [ $RET -ne 0 ]; then
    echo "${RED}[EQ_FAILED]${NC}"
    exit $RET
fi


echo "${GREEN}[OK]${NC}"

exit $RET

