
function sincos(in: real) returns (sin: real; cos: real);
--@const max = 1.0;
--@const pi = 3.14;
--@const tau = 2.0 * pi;
--@var min = - max;
--@require in <= 0.0 or in >= 0.0;
--@ensure min <= sin and sin <= max;

--@contract pos;
--@require 0.0 <= in and in <= tau;
--@ensure sin >= 0.0;

--@contract neg;
--@require - tau <= in and in <= 0.0;
--@ensure sin <= 0.0;

node X (in: real) returns (OK: bool);
var inn: real ;
let
  inn = in ; 
  OK =
    exp(0.0 -> inn, 1.0 -> inn) > 0.0 or
    sincos(0.0 -> inn + pre inn) + sincos(0.0 -> inn + pre inn) = (0.0, 0.0);
tel;

node id (in: real) returns (out: int);
--@const max = 1.0;
--@const pi = 3.14;
--@const tau = 2.0 * pi;
--@var min = - max;
--@require - tau <= in ;
var inn: real ; ok: bool ;
let
  out = (int in);
  inn = in ;
  ok = X(inn) ;
  --%PROPERTY ok ;
  --%MAIN ;
tel;

function exp (x, y: real) returns (out: real);
-- --@ensure out >= id(out);
-- --@ensure out <= sin(out);

function sin(in: real) returns (out: int);
