#!/bin/bash


# A script for qsub to evaluate the results of an arry job
#
# Author: Christoph Sticksel (christoph-sticksel@uiowa.edu)


usage ()
{
    cat <<EOF
Usage: `basename $0` [-o OUT] -p kind1|kind-pdr [DIR]
Grep all files in DIR for occurrences of distinguished strings meaning the 
property was proved, invalidated or an error occurred. If none of the strings
can be found, assume the problem timed out.
EOF
}

# Reset variables 
OUTFILE=""
OUTDIR=""

# Parse all command-line arguments 
while :
  do
  case $1 in

      -h | --help) # Display usage message
          usage
          exit 0
          ;;
      
      -o) # -o OUT is the file to write to
          if [ ! "$2" ]; then
              usage
              exit 1
          else
              OUTFILE=$2
          fi  
          shift 2
          ;;

      -p) # -p determines the distinguished strings 
          if [ ! "$2" ]; then
              usage
              exit 1
          else
              case $2 in
                  
                  # Set distinguished strings for Kind-PDR
                  kind-2)
                      VALID_PAT="^<Success>"
                      VALID_STR="Valid"
                      INVALID_PAT="^<Failure>"
                      INVALID_STR="Invalid"
                      ERROR_PAT="^<Error>"
                      ERROR_STR="Error"
                      # TIMEOUT_STR="^<Interruption>"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for Kind-PDR
                  kind-pdr)
                      VALID_PAT="^Success: property proved"
                      VALID_STR="Valid"
                      INVALID_PAT="^Failure: property invalidated"
                      INVALID_STR="Invalid"
                      ERROR_PAT="^\(Error:\|Fatal error:\)"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for PKind
                  pkind)
                      VALID_PAT="RESULT = VALID"
                      VALID_STR="Valid"
                      INVALID_PAT="RESULT = INVALID"
                      INVALID_STR="Invalid"
                      ERROR_PAT="^\(Error:\|kind: unknown option\)"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for JKind
                  jkind)
                      VALID_PAT="^VALID PROPERTIES:"
                      VALID_STR="Valid"
                      INVALID_PAT="^INVALID PROPERTY:"
                      INVALID_STR="Invalid"
                      ERROR_PAT="^\(Error:\|Parse error\)"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for Kind-1
                  kind-1)
                      VALID_PAT="; .* step is Valid"
                      VALID_STR="Valid"
                      INVALID_PAT="; .* base is Invalid."
                      INVALID_STR="Invalid"
                      ERROR_PAT="^\(Error:\|kind: unknown option\)"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for TPTP
                  TPTP)
                      VALID_PAT="% SZS status \(Unsatisfiable\|Theorem\)"
                      VALID_STR="Unsat"
                      INVALID_PAT="% SZS status \(Satisfiable\|CounterSatisfiable\)"
                      INVALID_STR="Sat"
                      ERROR_PAT="% SZS status \(GaveUp\|Error\)"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for ic3smt
                  ic3smt)
                      VALID_PAT="^Safe"
                      VALID_STR="Valid"
                      INVALID_PAT="^Unsafe"
                      INVALID_STR="Invalid"
                      ERROR_PAT="^Unknown"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for Z3 
                  z3)
                      VALID_PAT="^unsat"
                      VALID_STR="Valid"
                      INVALID_PAT="^sat"
                      INVALID_STR="Invalid"
                      ERROR_PAT="^(error"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Set distinguished strings for Z3 Horn clauses problems 
                  z3-horn)
                      VALID_PAT="^sat"
                      VALID_STR="Valid"
                      INVALID_PAT="^unsat"
                      INVALID_STR="Invalid"
                      ERROR_PAT="^(error"
                      ERROR_STR="Error"
                      TIMEOUT_STR="Timeout"
                      ;;
                  # Add more distinguished strings here 
                  *)
                      usage
                      exit 1
                      ;;
              esac
              shift 2
          fi
          ;;

      --) # End of all options
          shift
          break
          ;;

      -*) # Unknown option
          usage 
          exit 1

          ;;
      *)  # no more options. Stop while loop
          break
          ;;
    esac
done

# Check if distinguished strings have been set 
if [ ! "$VALID_STR" ]; then
    echo "ERROR: option -p not given. See --help" >&2
    exit 1
fi

# Set default output file if not given 
if [ ! "$OUTFILE" ]; then 
    OUTFILE=stat
fi

# Set default directory if not given 
if [ ! "$1" ]; then 
    OUTDIR=`pwd`
else
    OUTDIR=$1
fi

# Temporary files to grep into 
VALID_TMP=`mktemp -t valid.XXXXXXXXXX` || exit 1
INVALID_TMP=`mktemp -t invalid.XXXXXXXXXX` || exit 1
ERROR_TMP=`mktemp -t error.XXXXXXXXXX` || exit 1
RUNTIME_TMP=`mktemp -t runtime.XXXXXXXXXX` || exit 1

# Count occurrences of distinguished strings 
grep -c "$VALID_PAT"  $OUTDIR/* > $VALID_TMP
grep -c "$INVALID_PAT" $OUTDIR/* > $INVALID_TMP
grep -c "$ERROR_PAT" $OUTDIR/* > $ERROR_TMP

for OUTPUT in $OUTDIR/*
do
  RUNTIME=`sed -n -e '/FINAL WATCH/!d' -e 's/FINAL WATCH: \(.*\) CPU \(.*\) WC/\2 \1/' -e 'p' $OUTPUT`
  echo "$OUTPUT:$RUNTIME" >> $RUNTIME_TMP
done

# Join the temporary files 
join -t : $VALID_TMP $INVALID_TMP | join -t : - $ERROR_TMP | join -t : - $RUNTIME_TMP > $OUTFILE

# Strip path prefix from file names
OUTDIR_ESC=`echo $OUTDIR | sed -e 's/[\/&]/\\\&/g'`
sed -i -e "s/$OUTDIR_ESC\///" $OUTFILE

# Count the number of occurrences of distinguished strings 
VALID_NUM=`grep -c :[1-9][0-9]*:0:0: $OUTFILE`
INVALID_NUM=`grep -c :0:[1-9][0-9]*:0: $OUTFILE`
ERROR_NUM=`grep -c :0:0:[1-9][0-9]*: $OUTFILE`
TIMEOUT_NUM=`grep -c :0:0:0: $OUTFILE`

# Replace pattern counts by strings
sed -i -e "s/:[1-9][0-9]*:0:0:/ $VALID_STR /" $OUTFILE
sed -i -e "s/:0:[1-9][0-9]*:0:/ $INVALID_STR /" $OUTFILE
sed -i -e "s/:[0-9]*:[0-9]*:[1-9][0-9]*:/ $ERROR_STR /" $OUTFILE
sed -i -e "s/:0:0:0:/ $TIMEOUT_STR /" $OUTFILE

# Append statistics to end of output file 
# echo "--" >> $OUTFILE
# echo "Valid: $VALID_NUM" >> $OUTFILE
# echo "Invalid: $INVALID_NUM" >> $OUTFILE
# echo "Error: $ERROR_NUM" >> $OUTFILE
# echo "Timeout: $TIMEOUT_NUM" >> $OUTFILE

# Remove temporary files 
# rm $VALID_TMP
# rm $INVALID_TMP
# rm $ERROR_TMP
